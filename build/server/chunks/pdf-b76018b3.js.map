{"version":3,"file":"pdf-b76018b3.js","sources":["../../../.svelte-kit/adapter-node/chunks/pdf.js"],"sourcesContent":["import * as path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { writeFile } from \"node:fs/promises\";\nimport ShortUniqueId from \"short-unique-id\";\nimport { d as defaultFlags, K as KmeansColors, h as hexToRgb, a as hexToCmyk } from \"./kmeans-colors.js\";\nimport \"mupdf-js\";\nimport \"mupdf-js/dist/libmupdf.js\";\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\nconst prepare = async (blob, filename, tempdir) => {\n  console.log(\"prepare\");\n  const extension = blob.type.replace(\"application/\", \"\");\n  const hash = new ShortUniqueId()();\n  filename = filename ?? `pdf-${hash}`;\n  tempdir = tempdir ?? \"storage/tmp/\";\n  const filedir = `${tempdir}${filename}`;\n  const filepath = `${filedir}.${extension}`;\n  return {\n    buffer: Buffer.from(await blob.arrayBuffer()),\n    arrayBuffer: await blob.arrayBuffer(),\n    extension,\n    filename,\n    tempdir,\n    filedir,\n    filepath,\n    hash\n  };\n};\nconst preview = async (arrayBuffer, filedir, format = \"image/png\", scale = 0.1) => {\n  console.log(\"preview\");\n  const images = await bufferToBase64(arrayBuffer);\n  await saveToTemp(images, filedir);\n  let kmeans_colors = [];\n  console.log(\"kmeansColors\");\n  for (let i = 0; i < images.length; i++) {\n    const imagepath = path.join(__dirname, `../../../../${filedir}/page-${i}.png`);\n    const color = await kmeansColors(imagepath);\n    kmeans_colors = [...kmeans_colors, color];\n  }\n  return {\n    images,\n    kmeans_colors\n  };\n};\nconst kmeansColors = async (imagepath) => {\n  const flags = defaultFlags(imagepath);\n  const { stdout } = await KmeansColors.exec(flags);\n  const kmeans = stdout.split(\"\\n\");\n  const colors = kmeans[0].split(\",\");\n  const percentage = kmeans[1].split(\",\");\n  const color = colors.map((color2, index) => {\n    const hexstring = `#${color2}`;\n    return {\n      color: hexstring,\n      hex: hexstring,\n      rgb: hexToRgb(hexstring).join(\" \"),\n      cmyk: hexToCmyk(hexstring),\n      percentage: (percentage[index] * 100).toFixed(2)\n    };\n  });\n  return color;\n};\nconst bufferToBase64 = async (arrayBuffer, format = \"image/png\", scale = 0.1) => {\n  console.log(\"bufferToBase64\");\n  return new Promise(async (resolve, reject) => {\n    try {\n      const before = Date.now();\n      let images = [];\n      const { pdf, pages, viewport } = await pdfJsDocument(arrayBuffer, scale);\n      for (let i = 1; i < pages; i++) {\n        const canvas = createCanvas(viewport.width, viewport.height);\n        const canvasContext = canvas.getContext(\"2d\");\n        const page = await pdf.getPage(i);\n        const renderTask = page.render({\n          canvasContext,\n          viewport\n        });\n        await renderTask.promise.then(() => {\n          return images = [...images, canvas.toDataURL()];\n        });\n      }\n      const after = Date.now();\n      console.log(`bufferToBase64 done in ${Math.round((after - before) / 1e3)}s`);\n      resolve(images);\n    } catch (error) {\n      console.log(error);\n      reject(error);\n    }\n  });\n};\nconst pdfJsDocument = async (arrayBuffer, scale = 0.1) => {\n  console.log(\"pdfJsDocument\");\n  pdfjsLib.GlobalWorkerOptions.workerSrc = \"pdfjs-dist/legacy/build/pdf.worker\";\n  const loadingTask = pdfjsLib.getDocument(arrayBuffer);\n  const pdf = await loadingTask.promise;\n  const firstPage = await pdf.getPage(1);\n  return {\n    pdf,\n    pages: pdf._pdfInfo.numPages,\n    viewport: firstPage.getViewport({ scale })\n  };\n};\nconst saveToTemp = async (images, filedir) => {\n  console.log(\"saveToTemp\");\n  return new Promise((resolve, reject) => {\n    try {\n      images.forEach(async (image, index) => {\n        const buffer = Buffer.from(image.replace(\"data:image/png;base64,\", \"\"), \"base64\");\n        await writeFile(`${filedir}/page-${index}.png`, buffer, { flag: \"w+\" });\n        resolve();\n      });\n    } catch (error) {\n      console.log(error);\n      reject(error);\n    }\n  });\n};\nconst pdf2pic = async (GhostPrintPDF) => {\n  const pdfJsDocumentbefore = Date.now();\n  const { pdf, pages, viewport } = await pdfJsDocument(GhostPrintPDF.arrayBuffer, 0.1);\n  const pdfJsDocumentafter = Date.now();\n  console.log(`pdfJsDocument done in ${Math.round((pdfJsDocumentafter - pdfJsDocumentbefore) / 1e3)}s`);\n  const options = {\n    saveFilename: \"page\",\n    savePath: GhostPrintPDF.filedir,\n    format: \"png\",\n    width: viewport.width,\n    height: viewport.height\n  };\n  console.log(\"options: \", options);\n  const isBase64 = true;\n  let images = [];\n  const pdf2pic2 = pdf2picFromBuffer(GhostPrintPDF.buffer, options);\n  console.log(\"pdf2pic: \", pdf2pic2);\n  const pdf2picbefore = Date.now();\n  for (let i = 1; i < pages; i++) {\n    const image = await pdf2pic2(i, isBase64);\n    images = [...images, `data:image/png;base64,${image.base64}`];\n  }\n  const pdf2picafter = Date.now();\n  console.log(`pdf2pic done in ${Math.round((pdf2picafter - pdf2picbefore) / 1e3)}s`);\n  const saveToTempbefore = Date.now();\n  await saveToTemp(images, GhostPrintPDF.filedir);\n  const saveToTempafter = Date.now();\n  console.log(`saveToFolder done in ${Math.round((saveToTempafter - saveToTempbefore) / 1e3)}s`);\n  const kmeansColorsbefore = Date.now();\n  let kmeans_colors = [];\n  console.log(\"kmeansColors\");\n  for (let i = 0; i < images.length; i++) {\n    const imagepath = path.join(__dirname, `../../../../${GhostPrintPDF.filedir}/page-${i}.png`);\n    const color = await kmeansColors(imagepath);\n    kmeans_colors = [...kmeans_colors, color];\n  }\n  const kmeansColorsafter = Date.now();\n  console.log(`kmeansColors done in ${Math.round((kmeansColorsafter - kmeansColorsbefore) / 1e3)}s`);\n  return {\n    images,\n    kmeans_colors\n  };\n};\nconst mupdf = async (GhostPrintPDF) => {\n  try {\n    return {\n      images: []\n      // kmeans_colors\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      images: []\n    };\n  }\n};\nexport {\n  pdf2pic as a,\n  preview as b,\n  kmeansColors as k,\n  mupdf as m,\n  prepare as p\n};\n"],"names":[],"mappings":"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"}